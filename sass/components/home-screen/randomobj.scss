// @import '../variables';

$radius: 100px; // Adjusted to a fixed value for demonstration purposes
$primary-animation-color: #6d6d6d0a;
$secondary-animation-color: #6d6c6c0a;


.animated {
  width: 100%;
  position: relative; // This will contain the absolutely positioned children
}

.animation-wrapper {
  position: absolute;
  top: 25%; // Adjusted to stay within the parent
  left: 40%; // Adjusted to stay within the parent
  width: $radius; // Ensure this fits within the .animated container
  height: $radius; // Ensure this fits within the .animated container
  // background-color: rgba(0, 0, 0, 0.1); // Temporary background for visibility
}

.flounder {
  filter: opacity(20);
  width: $radius;
  height: $radius;
  position: absolute;
  top: 50%; // Center within the wrapper
  left: 50%; // Center within the wrapper
  transform: translate(-50%, -50%); // Center within the wrapper
  // background-color: blue; // Temporary background for visibility
}

.flounder::before {
  filter: opacity(20);

  background: $primary-animation-color;
  // border-radius: 50%; // Corrected to 50% to make it a circle
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  content: "";
}

.animation-wrapper.secondary {
  top: 50%; // Adjusted top position
  left: 20%; // Adjusted left position
  will-change: transform;
  transform: rotate(56deg);
  // background-color: rgba(0, 0, 0, 0.1); // Temporary background for visibility
}

.animation-wrapper.secondary .flounder::before {
  background: $secondary-animation-color;
}

/* Media Queries and Keyframes remain the same */
@media (prefers-reduced-motion) {
  .flounder,
  .flounder::before {
    animation: none;
  }

  .flounder:nth-child(1) {
    transform: matrix(1, 0, 0, 1, 800, 0);
  }

  .flounder:nth-child(1)::before {
    transform: matrix(1, 0, 0, 1, 0, -71);
  }

  .flounder:nth-child(2) {
    display: none;
    transform: none;
  }
}

@media (prefers-reduced-motion: no-preference) {
  .flounder,
  .flounder::before {
    transform: translate(0);
    will-change: transform;
  }

  .flounder:nth-child(1) {
    transform: translate(calc(#{$radius} * -1.1));
    animation: x-axis-lateral 20s infinite alternate ease-in-out;
  }

  .flounder:nth-child(1)::before {
    animation: y-axis-lateral 20s infinite 5s alternate ease-in-out;
  }

  .flounder:nth-child(2) {
    animation: x-axis 40s infinite alternate ease-in-out;
  }

  .flounder:nth-child(2)::before {
    animation: y-axis 4s infinite 0.5s alternate ease-in-out;
  }

  @keyframes x-axis {
    0% {
      transform: translate(calc(#{$radius} * -1.6));
    }

    100% {
      transform: translate(calc(#{$radius} * 1.6));
    }
  }

  @keyframes y-axis {
    0% {
      transform: translateY(calc(#{$radius} * 0.7));
    }

    100% {
      transform: translateY(calc(#{$radius} * -1.1)) scale(0.8);
    }
  }

  @keyframes x-axis-lateral {
    0% {
      transform: translate(calc(#{$radius} * -0.6));
    }

    100% {
      transform: translate(calc(#{$radius} * 0.6));
    }
  }

  @keyframes y-axis-lateral {
    0% {
      transform: translateY(calc(#{$radius} / 5));
    }

    100% {
      transform: translateY(calc(#{$radius} * -0.5));
    }
  }
}
